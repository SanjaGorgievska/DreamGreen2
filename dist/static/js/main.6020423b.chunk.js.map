{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/SodrzinaZaProekt.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Naslovna.js","components/projects/DetaliProekt.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/KreirajProekt.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","SodrzinaZaProekt","_ref","project","title","authorFirstName","authorLastName","moment","calendar","ProjectList","projects","map","id","key","projects_SodrzinaZaProekt","Notifications","notifications","item","user","content","time","toDate","fromNow","Naslovna","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","createdAt","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","KreirajProekt","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","DetaliProekt","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.6020423b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>Нов проект</NavLink></li>\r\n        <li><a onClick={props.signOut}>Одјава</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email, \r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        email: newUser.email,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Регистрација</NavLink></li>\r\n        <li><NavLink to='/signin'>Најава</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Aplikacija</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst SodrzinaZaProekt = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>Објавено од {project.authorFirstName} {project.authorLastName}</p>\r\n      <p className=\"grey-text\">{moment(project).calendar}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SodrzinaZaProekt","import React from 'react'\r\nimport SodrzinaZaProekt from './SodrzinaZaProekt'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n            <SodrzinaZaProekt project={project} />\r\n          </Link>\r\n        )\r\n      })}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Известувања</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Naslovna extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Naslovna)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst DetaliProekt = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' /> \r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Објавено од: {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(DetaliProekt)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Најава</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">E-mail адреса</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Лозинка</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Најавете се</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Регистрација</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">E-mail адреса</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Лозинка</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">Име</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Презиме</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Регистрирајте се</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass KreirajProekt extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Креирај нов проект</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Наслов на проектот</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Содржина на проектот</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Креирај</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KreirajProekt)","export const createProject = (project) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Naslovna from './components/dashboard/Naslovna'\nimport DetaliProekt from './components/projects/DetaliProekt'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport KreirajProekt from './components/projects/KreirajProekt'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Naslovna} />\n            <Route path='/project/:id' component={DetaliProekt} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={KreirajProekt} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer\r\n\r\n// the key name will be the data property on the state object","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Replace this with your own config details\r\n// var config = {\r\n//     apiKey: \"AIzaSyDeEarQ-5gA2wUquzj-yiVurZNAFtONhHw\",\r\n//     authDomain: \"aplikacija-ad746.firebaseapp.com\",\r\n//     databaseURL: \"https://aplikacija-ad746.firebaseio.com\",\r\n//     projectId: \"aplikacija-ad746\",\r\n//     storageBucket: \"\",\r\n//     messagingSenderId: \"182795798750\",\r\n//     appId: \"1:182795798750:web:6a1b447d10faf12e\"\r\n// };\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyAE4UoVUQ4g83jNPnTktEkR8VqBT2gjVUo\",\r\n    authDomain: \"podatoci-be5fd.firebaseapp.com\",\r\n    databaseURL: \"https://podatoci-be5fd.firebaseio.com\",\r\n    projectId: \"podatoci-be5fd\",\r\n    storageBucket: \"podatoci-be5fd.appspot.com\",\r\n    messagingSenderId: \"256775861707\",\r\n    appId: \"1:256775861707:web:86bdbc8819799e96\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  registerServiceWorker();\n});\n"],"sourceRoot":""}